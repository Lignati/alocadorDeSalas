package interfaceXML;
import java.util.*;
import dominio.*;

import java.io.File;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

public class AbreArquivo {
	String              nome;
	List<Predio>        predios;
	List<Disciplina>    disciplinas;
	Map<Integer,String> idRecursos;
	
	public AbreArquivo(String nome){
		
		this.predios     =  new ArrayList <Predio>();
		this.disciplinas =  new ArrayList <Disciplina>();
		this.idRecursos  =  new HashMap <Integer,String>(); 
		
		this.nome = nome;
	}
	
	public List<Disciplina> montaListaDisciplinas(String nomeArquivo){
		  Disciplina novaDisciplina;
		  List<Disciplina> novaListaDisciplinas = new ArrayList <Disciplina>();
	      try {	
		         File inputFile = new File("nomeArquivo.xml");
		         DocumentBuilderFactory dbFactory 
		            = DocumentBuilderFactory.newInstance();
		         DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
		         Document doc = dBuilder.parse(inputFile);
		         doc.getDocumentElement().normalize();
		         NodeList disciplinaXMLList = doc.getElementsByTagName("course");
		         for (int i = 0; i < disciplinaXMLList.getLength(); i++) {
		            Node nodoXMLDisciplina = disciplinaXMLList.item(i);
		            if (nodoXMLDisciplina.getNodeType() == Node.ELEMENT_NODE) {
		               Element elementoDisciplina = (Element) nodoXMLDisciplina;

		               novaDisciplina = new Disciplina(elementoDisciplina.getAttribute("name"), elementoDisciplina.getAttribute("id"));
		             
		              List<Turma> novaListaTurmas = new ArrayList <Turma>();
		              Turma novaTurma;
		  	         NodeList turmasXMLList = doc.getElementsByTagName("group");
			         for (int j = 0; j < turmasXMLList.getLength(); j++) {
			            Node nodoXMLTurma = turmasXMLList.item(j);
			            if (nodoXMLTurma.getNodeType() == Node.ELEMENT_NODE) {
			               Element elementoTurma = (Element) nodoXMLTurma;
			              
			               novaTurma = new Turma(elementoTurma.getAttribute("tecaher"),Integer.valueOf(elementoTurma.getAttribute("number_of_students")),elementoTurma.getAttribute("id"));
			               
			               novaListaTurmas.add(novaTurma);
			            }
			            
			        
			         }
			         novaListaDisciplinas.add(novaDisciplina);
		               
		            }
		         }
		      } catch (Exception e) {
		         e.printStackTrace();
		      }
		return novaListaDisciplinas;
	}
}
